* Study how BFS Algorithms can be implemented in Erlang. Implement them. Compare them
** Assumptions: 
  - The Graph is fully connected.
  - Each node can have multiple children.
  - Each node can only have one parent. 
** Variations
Major ways in which BFS Algorithm can vary:
- Representation of the tree [[* Tree Representation ]] 
- Some algorithmic change in the way we do BFS:
  - Can also be distributed/ sequential [[* Distributed / Sequential?]]



* Tree Representation 
** TODO Adjacency Matrix

** TODO Hash Array Mapped Tries 
http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.21.6279
** Recursive Structure 
*** TODO Defining a Custom Type 
    `data Tree =  Leaf | Value [Tree] `

*** DONE Use Primitives themselves
A tree is given by Value [Ids of Children]

Sample Input Graph : 
    CLOSED: [2020-03-28 Sat 13:17]
 #+CAPTION: Graph for the data in `input1`
#+NAME:   input1
[[./images/input1.png]]
** TODO EdgePairs 
- Get the number of nodes, and a list of all connected edges 

* Distributed / Sequential? 
  Should the algorithm be distributed? Or will a sequential algorithm suffice? 
